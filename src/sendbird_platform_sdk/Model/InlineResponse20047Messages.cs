/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = sendbird_platform_sdk.Client.OpenAPIDateConverter;

namespace sendbird_platform_sdk.Model
{
    /// <summary>
    /// InlineResponse20047Messages
    /// </summary>
    [DataContract]
    public partial class InlineResponse20047Messages :  IEquatable<InlineResponse20047Messages>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20047Messages" /> class.
        /// </summary>
        /// <param name="messageId">messageId.</param>
        /// <param name="type">type.</param>
        /// <param name="customType">customType.</param>
        /// <param name="channelUrl">channelUrl.</param>
        /// <param name="user">user.</param>
        /// <param name="mentionType">mentionType.</param>
        /// <param name="mentionedUsers">mentionedUsers.</param>
        /// <param name="isRemoved">isRemoved.</param>
        /// <param name="message">message.</param>
        /// <param name="translations">translations.</param>
        /// <param name="data">data.</param>
        /// <param name="sortedMetaarray">sortedMetaarray.</param>
        /// <param name="ogTag">ogTag.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="file">file.</param>
        public InlineResponse20047Messages(decimal messageId = default(decimal), string type = default(string), string customType = default(string), string channelUrl = default(string), InlineResponse20047User user = default(InlineResponse20047User), string mentionType = default(string), List<InlineResponse20047User> mentionedUsers = default(List<InlineResponse20047User>), bool isRemoved = default(bool), string message = default(string), Object translations = default(Object), string data = default(string), List<InlineResponse20047SortedMetaarray> sortedMetaarray = default(List<InlineResponse20047SortedMetaarray>), InlineResponse20047OgTag ogTag = default(InlineResponse20047OgTag), decimal createdAt = default(decimal), decimal updatedAt = default(decimal), Object file = default(Object))
        {
            this.MessageId = messageId;
            this.Type = type;
            this.CustomType = customType;
            this.ChannelUrl = channelUrl;
            this.User = user;
            this.MentionType = mentionType;
            this.MentionedUsers = mentionedUsers;
            this.IsRemoved = isRemoved;
            this.Message = message;
            this.Translations = translations;
            this.Data = data;
            this.SortedMetaarray = sortedMetaarray;
            this.OgTag = ogTag;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.File = file;
        }

        /// <summary>
        /// Gets or Sets MessageId
        /// </summary>
        [DataMember(Name="message_id", EmitDefaultValue=false)]
        public decimal MessageId { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets CustomType
        /// </summary>
        [DataMember(Name="custom_type", EmitDefaultValue=false)]
        public string CustomType { get; set; }

        /// <summary>
        /// Gets or Sets ChannelUrl
        /// </summary>
        [DataMember(Name="channel_url", EmitDefaultValue=false)]
        public string ChannelUrl { get; set; }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public InlineResponse20047User User { get; set; }

        /// <summary>
        /// Gets or Sets MentionType
        /// </summary>
        [DataMember(Name="mention_type", EmitDefaultValue=false)]
        public string MentionType { get; set; }

        /// <summary>
        /// Gets or Sets MentionedUsers
        /// </summary>
        [DataMember(Name="mentioned_users", EmitDefaultValue=false)]
        public List<InlineResponse20047User> MentionedUsers { get; set; }

        /// <summary>
        /// Gets or Sets IsRemoved
        /// </summary>
        [DataMember(Name="is_removed", EmitDefaultValue=false)]
        public bool IsRemoved { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets Translations
        /// </summary>
        [DataMember(Name="translations", EmitDefaultValue=false)]
        public Object Translations { get; set; }

        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [DataMember(Name="data", EmitDefaultValue=false)]
        public string Data { get; set; }

        /// <summary>
        /// Gets or Sets SortedMetaarray
        /// </summary>
        [DataMember(Name="sorted_metaarray", EmitDefaultValue=false)]
        public List<InlineResponse20047SortedMetaarray> SortedMetaarray { get; set; }

        /// <summary>
        /// Gets or Sets OgTag
        /// </summary>
        [DataMember(Name="og_tag", EmitDefaultValue=false)]
        public InlineResponse20047OgTag OgTag { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public decimal CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name="updated_at", EmitDefaultValue=false)]
        public decimal UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets File
        /// </summary>
        [DataMember(Name="file", EmitDefaultValue=false)]
        public Object File { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20047Messages {\n");
            sb.Append("  MessageId: ").Append(MessageId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  CustomType: ").Append(CustomType).Append("\n");
            sb.Append("  ChannelUrl: ").Append(ChannelUrl).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  MentionType: ").Append(MentionType).Append("\n");
            sb.Append("  MentionedUsers: ").Append(MentionedUsers).Append("\n");
            sb.Append("  IsRemoved: ").Append(IsRemoved).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Translations: ").Append(Translations).Append("\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  SortedMetaarray: ").Append(SortedMetaarray).Append("\n");
            sb.Append("  OgTag: ").Append(OgTag).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  File: ").Append(File).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20047Messages);
        }

        /// <summary>
        /// Returns true if InlineResponse20047Messages instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20047Messages to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20047Messages input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MessageId == input.MessageId ||
                    (this.MessageId != null &&
                    this.MessageId.Equals(input.MessageId))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.CustomType == input.CustomType ||
                    (this.CustomType != null &&
                    this.CustomType.Equals(input.CustomType))
                ) && 
                (
                    this.ChannelUrl == input.ChannelUrl ||
                    (this.ChannelUrl != null &&
                    this.ChannelUrl.Equals(input.ChannelUrl))
                ) && 
                (
                    this.User == input.User ||
                    (this.User != null &&
                    this.User.Equals(input.User))
                ) && 
                (
                    this.MentionType == input.MentionType ||
                    (this.MentionType != null &&
                    this.MentionType.Equals(input.MentionType))
                ) && 
                (
                    this.MentionedUsers == input.MentionedUsers ||
                    this.MentionedUsers != null &&
                    input.MentionedUsers != null &&
                    this.MentionedUsers.SequenceEqual(input.MentionedUsers)
                ) && 
                (
                    this.IsRemoved == input.IsRemoved ||
                    (this.IsRemoved != null &&
                    this.IsRemoved.Equals(input.IsRemoved))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.Translations == input.Translations ||
                    (this.Translations != null &&
                    this.Translations.Equals(input.Translations))
                ) && 
                (
                    this.Data == input.Data ||
                    (this.Data != null &&
                    this.Data.Equals(input.Data))
                ) && 
                (
                    this.SortedMetaarray == input.SortedMetaarray ||
                    this.SortedMetaarray != null &&
                    input.SortedMetaarray != null &&
                    this.SortedMetaarray.SequenceEqual(input.SortedMetaarray)
                ) && 
                (
                    this.OgTag == input.OgTag ||
                    (this.OgTag != null &&
                    this.OgTag.Equals(input.OgTag))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.File == input.File ||
                    (this.File != null &&
                    this.File.Equals(input.File))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MessageId != null)
                    hashCode = hashCode * 59 + this.MessageId.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.CustomType != null)
                    hashCode = hashCode * 59 + this.CustomType.GetHashCode();
                if (this.ChannelUrl != null)
                    hashCode = hashCode * 59 + this.ChannelUrl.GetHashCode();
                if (this.User != null)
                    hashCode = hashCode * 59 + this.User.GetHashCode();
                if (this.MentionType != null)
                    hashCode = hashCode * 59 + this.MentionType.GetHashCode();
                if (this.MentionedUsers != null)
                    hashCode = hashCode * 59 + this.MentionedUsers.GetHashCode();
                if (this.IsRemoved != null)
                    hashCode = hashCode * 59 + this.IsRemoved.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.Translations != null)
                    hashCode = hashCode * 59 + this.Translations.GetHashCode();
                if (this.Data != null)
                    hashCode = hashCode * 59 + this.Data.GetHashCode();
                if (this.SortedMetaarray != null)
                    hashCode = hashCode * 59 + this.SortedMetaarray.GetHashCode();
                if (this.OgTag != null)
                    hashCode = hashCode * 59 + this.OgTag.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                if (this.File != null)
                    hashCode = hashCode * 59 + this.File.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
