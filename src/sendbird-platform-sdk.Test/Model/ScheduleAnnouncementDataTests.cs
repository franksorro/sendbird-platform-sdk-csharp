/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using sendbird-platform-sdk.Api;
using sendbird-platform-sdk.Model;
using sendbird-platform-sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace sendbird-platform-sdk.Test
{
    /// <summary>
    ///  Class for testing ScheduleAnnouncementData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ScheduleAnnouncementDataTests
    {
        // TODO uncomment below to declare an instance variable for ScheduleAnnouncementData
        //private ScheduleAnnouncementData instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ScheduleAnnouncementData
            //instance = new ScheduleAnnouncementData();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ScheduleAnnouncementData
        /// </summary>
        [Test]
        public void ScheduleAnnouncementDataInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ScheduleAnnouncementData
            //Assert.IsInstanceOf(typeof(ScheduleAnnouncementData), instance);
        }


        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Test]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }
        /// <summary>
        /// Test the property 'MessageType'
        /// </summary>
        [Test]
        public void MessageTypeTest()
        {
            // TODO unit test for the property 'MessageType'
        }
        /// <summary>
        /// Test the property 'MessageUserId'
        /// </summary>
        [Test]
        public void MessageUserIdTest()
        {
            // TODO unit test for the property 'MessageUserId'
        }
        /// <summary>
        /// Test the property 'MessageContent'
        /// </summary>
        [Test]
        public void MessageContentTest()
        {
            // TODO unit test for the property 'MessageContent'
        }
        /// <summary>
        /// Test the property 'TargetAt'
        /// </summary>
        [Test]
        public void TargetAtTest()
        {
            // TODO unit test for the property 'TargetAt'
        }
        /// <summary>
        /// Test the property 'TargetList'
        /// </summary>
        [Test]
        public void TargetListTest()
        {
            // TODO unit test for the property 'TargetList'
        }
        /// <summary>
        /// Test the property 'TargetChannelType'
        /// </summary>
        [Test]
        public void TargetChannelTypeTest()
        {
            // TODO unit test for the property 'TargetChannelType'
        }
        /// <summary>
        /// Test the property 'UniqueId'
        /// </summary>
        [Test]
        public void UniqueIdTest()
        {
            // TODO unit test for the property 'UniqueId'
        }
        /// <summary>
        /// Test the property 'MessageCustomType'
        /// </summary>
        [Test]
        public void MessageCustomTypeTest()
        {
            // TODO unit test for the property 'MessageCustomType'
        }
        /// <summary>
        /// Test the property 'MessageData'
        /// </summary>
        [Test]
        public void MessageDataTest()
        {
            // TODO unit test for the property 'MessageData'
        }
        /// <summary>
        /// Test the property 'CreateChannel'
        /// </summary>
        [Test]
        public void CreateChannelTest()
        {
            // TODO unit test for the property 'CreateChannel'
        }
        /// <summary>
        /// Test the property 'AnnouncementGroup'
        /// </summary>
        [Test]
        public void AnnouncementGroupTest()
        {
            // TODO unit test for the property 'AnnouncementGroup'
        }
        /// <summary>
        /// Test the property 'CreateChannelOptions'
        /// </summary>
        [Test]
        public void CreateChannelOptionsTest()
        {
            // TODO unit test for the property 'CreateChannelOptions'
        }
        /// <summary>
        /// Test the property 'CreateChannelOptionsName'
        /// </summary>
        [Test]
        public void CreateChannelOptionsNameTest()
        {
            // TODO unit test for the property 'CreateChannelOptionsName'
        }
        /// <summary>
        /// Test the property 'CreateChannelOptionsCoverUrl'
        /// </summary>
        [Test]
        public void CreateChannelOptionsCoverUrlTest()
        {
            // TODO unit test for the property 'CreateChannelOptionsCoverUrl'
        }
        /// <summary>
        /// Test the property 'CreateChannelOptionsCustomType'
        /// </summary>
        [Test]
        public void CreateChannelOptionsCustomTypeTest()
        {
            // TODO unit test for the property 'CreateChannelOptionsCustomType'
        }
        /// <summary>
        /// Test the property 'CreateChannelOptionsData'
        /// </summary>
        [Test]
        public void CreateChannelOptionsDataTest()
        {
            // TODO unit test for the property 'CreateChannelOptionsData'
        }
        /// <summary>
        /// Test the property 'CreateChannelOptionsDistinct'
        /// </summary>
        [Test]
        public void CreateChannelOptionsDistinctTest()
        {
            // TODO unit test for the property 'CreateChannelOptionsDistinct'
        }
        /// <summary>
        /// Test the property 'ScheduledAt'
        /// </summary>
        [Test]
        public void ScheduledAtTest()
        {
            // TODO unit test for the property 'ScheduledAt'
        }
        /// <summary>
        /// Test the property 'CeaseAt'
        /// </summary>
        [Test]
        public void CeaseAtTest()
        {
            // TODO unit test for the property 'CeaseAt'
        }
        /// <summary>
        /// Test the property 'ResumeAt'
        /// </summary>
        [Test]
        public void ResumeAtTest()
        {
            // TODO unit test for the property 'ResumeAt'
        }
        /// <summary>
        /// Test the property 'EndAt'
        /// </summary>
        [Test]
        public void EndAtTest()
        {
            // TODO unit test for the property 'EndAt'
        }
        /// <summary>
        /// Test the property 'EnablePush'
        /// </summary>
        [Test]
        public void EnablePushTest()
        {
            // TODO unit test for the property 'EnablePush'
        }
        /// <summary>
        /// Test the property 'AssignSenderAsChannelInviter'
        /// </summary>
        [Test]
        public void AssignSenderAsChannelInviterTest()
        {
            // TODO unit test for the property 'AssignSenderAsChannelInviter'
        }

    }

}
