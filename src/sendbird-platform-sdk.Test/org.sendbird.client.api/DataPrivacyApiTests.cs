/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using sendbird-platform-sdk.Client;
using sendbird-platform-sdk.org.sendbird.client.api;
using sendbird-platform-sdk.Model;

namespace sendbird-platform-sdk.Test
{
    /// <summary>
    ///  Class for testing DataPrivacyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DataPrivacyApiTests
    {
        private DataPrivacyApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DataPrivacyApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DataPrivacyApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' DataPrivacyApi
            //Assert.IsInstanceOf(typeof(DataPrivacyApi), instance);
        }

        
        /// <summary>
        /// Test CancelTheRegistrationOfGdprRequestById
        /// </summary>
        [Test]
        public void CancelTheRegistrationOfGdprRequestByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestId = null;
            //string apiToken = null;
            //instance.CancelTheRegistrationOfGdprRequestById(requestId, apiToken);
            
        }
        
        /// <summary>
        /// Test ListGdprRequests
        /// </summary>
        [Test]
        public void ListGdprRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //string token = null;
            //int? limit = null;
            //var response = instance.ListGdprRequests(apiToken, token, limit);
            //Assert.IsInstanceOf(typeof(InlineResponse20068), response, "response is InlineResponse20068");
        }
        
        /// <summary>
        /// Test RegisterGdprRequest
        /// </summary>
        [Test]
        public void RegisterGdprRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //RegisterGdprRequestData registerGdprRequestData = null;
            //var response = instance.RegisterGdprRequest(apiToken, registerGdprRequestData);
            //Assert.IsInstanceOf(typeof(InlineResponse20069), response, "response is InlineResponse20069");
        }
        
        /// <summary>
        /// Test ViewGdprRequestById
        /// </summary>
        [Test]
        public void ViewGdprRequestByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string requestId = null;
            //string apiToken = null;
            //var response = instance.ViewGdprRequestById(requestId, apiToken);
            //Assert.IsInstanceOf(typeof(InlineResponse20068Requests), response, "response is InlineResponse20068Requests");
        }
        
    }

}
