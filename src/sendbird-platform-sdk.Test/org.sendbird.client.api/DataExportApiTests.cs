/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using sendbird-platform-sdk.Client;
using sendbird-platform-sdk.org.sendbird.client.api;
using sendbird-platform-sdk.Model;

namespace sendbird-platform-sdk.Test
{
    /// <summary>
    ///  Class for testing DataExportApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DataExportApiTests
    {
        private DataExportApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DataExportApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DataExportApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' DataExportApi
            //Assert.IsInstanceOf(typeof(DataExportApi), instance);
        }

        
        /// <summary>
        /// Test ListDataExportsByMessageChannelOrUser
        /// </summary>
        [Test]
        public void ListDataExportsByMessageChannelOrUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataType = null;
            //string apiToken = null;
            //string token = null;
            //int? limit = null;
            //var response = instance.ListDataExportsByMessageChannelOrUser(dataType, apiToken, token, limit);
            //Assert.IsInstanceOf(typeof(InlineResponse20063), response, "response is InlineResponse20063");
        }
        
        /// <summary>
        /// Test RegisterAndScheduleDataExport
        /// </summary>
        [Test]
        public void RegisterAndScheduleDataExportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataType = null;
            //string apiToken = null;
            //RegisterAndScheduleDataExportData registerAndScheduleDataExportData = null;
            //var response = instance.RegisterAndScheduleDataExport(dataType, apiToken, registerAndScheduleDataExportData);
            //Assert.IsInstanceOf(typeof(InlineResponse20063ExportedData), response, "response is InlineResponse20063ExportedData");
        }
        
        /// <summary>
        /// Test ViewDataExportById
        /// </summary>
        [Test]
        public void ViewDataExportByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataType = null;
            //string requestId = null;
            //string apiToken = null;
            //var response = instance.ViewDataExportById(dataType, requestId, apiToken);
            //Assert.IsInstanceOf(typeof(InlineResponse20064), response, "response is InlineResponse20064");
        }
        
    }

}
