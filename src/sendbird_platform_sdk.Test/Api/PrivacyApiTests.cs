/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using sendbird_platform_sdk.Client;
using sendbird_platform_sdk.Api;
using sendbird_platform_sdk.Model;

namespace sendbird_platform_sdk.Test
{
    /// <summary>
    ///  Class for testing PrivacyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PrivacyApiTests
    {
        private PrivacyApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PrivacyApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PrivacyApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' PrivacyApi
            //Assert.IsInstanceOf(typeof(PrivacyApi), instance);
        }

        
        /// <summary>
        /// Test CancelTheRegistrationOfGdprRequestById
        /// </summary>
        [Test]
        public void CancelTheRegistrationOfGdprRequestByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //string requestId = null;
            //instance.CancelTheRegistrationOfGdprRequestById(apiToken, requestId);
            
        }
        
        /// <summary>
        /// Test ListGdprRequests
        /// </summary>
        [Test]
        public void ListGdprRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //string token = null;
            //int? limit = null;
            //var response = instance.ListGdprRequests(apiToken, token, limit);
            //Assert.IsInstanceOf(typeof(ListGdprRequestsResponse), response, "response is ListGdprRequestsResponse");
        }
        
        /// <summary>
        /// Test RegisterGdprRequest
        /// </summary>
        [Test]
        public void RegisterGdprRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //RegisterGdprRequestData registerGdprRequestData = null;
            //var response = instance.RegisterGdprRequest(apiToken, registerGdprRequestData);
            //Assert.IsInstanceOf(typeof(RegisterGdprRequestResponse), response, "response is RegisterGdprRequestResponse");
        }
        
        /// <summary>
        /// Test ViewGdprRequestById
        /// </summary>
        [Test]
        public void ViewGdprRequestByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //string requestId = null;
            //var response = instance.ViewGdprRequestById(apiToken, requestId);
            //Assert.IsInstanceOf(typeof(ViewGdprRequestByIdResponse), response, "response is ViewGdprRequestByIdResponse");
        }
        
    }

}
