/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using sendbird_platform_sdk.Client;
using sendbird_platform_sdk.Api;
using sendbird_platform_sdk.Model;

namespace sendbird_platform_sdk.Test
{
    /// <summary>
    ///  Class for testing BotInterfaceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BotInterfaceApiTests
    {
        private BotInterfaceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BotInterfaceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BotInterfaceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' BotInterfaceApi
            //Assert.IsInstanceOf(typeof(BotInterfaceApi), instance);
        }

        
        /// <summary>
        /// Test CreateBot
        /// </summary>
        [Test]
        public void CreateBotTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //CreateBotData createBotData = null;
            //var response = instance.CreateBot(apiToken, createBotData);
            //Assert.IsInstanceOf(typeof(InlineResponse20065Bots), response, "response is InlineResponse20065Bots");
        }
        
        /// <summary>
        /// Test DeleteBotById
        /// </summary>
        [Test]
        public void DeleteBotByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //instance.DeleteBotById(botUserid, apiToken);
            
        }
        
        /// <summary>
        /// Test JoinChannels
        /// </summary>
        [Test]
        public void JoinChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //JoinChannelsData joinChannelsData = null;
            //var response = instance.JoinChannels(botUserid, apiToken, joinChannelsData);
            //Assert.IsInstanceOf(typeof(SendBirdGroupChannelCollection), response, "response is SendBirdGroupChannelCollection");
        }
        
        /// <summary>
        /// Test LeaveChannels
        /// </summary>
        [Test]
        public void LeaveChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //string channelUrl = null;
            //instance.LeaveChannels(botUserid, apiToken, channelUrl);
            
        }
        
        /// <summary>
        /// Test LeaveChannelsByUrl
        /// </summary>
        [Test]
        public void LeaveChannelsByUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string channelUrl = null;
            //string apiToken = null;
            //instance.LeaveChannelsByUrl(botUserid, channelUrl, apiToken);
            
        }
        
        /// <summary>
        /// Test ListBots
        /// </summary>
        [Test]
        public void ListBotsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //string token = null;
            //int? limit = null;
            //var response = instance.ListBots(apiToken, token, limit);
            //Assert.IsInstanceOf(typeof(InlineResponse20065), response, "response is InlineResponse20065");
        }
        
        /// <summary>
        /// Test SendBotsMessage
        /// </summary>
        [Test]
        public void SendBotsMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //SendBotSMessageData sendBotSMessageData = null;
            //var response = instance.SendBotsMessage(botUserid, apiToken, sendBotSMessageData);
            //Assert.IsInstanceOf(typeof(SendBirdMessageResponse), response, "response is SendBirdMessageResponse");
        }
        
        /// <summary>
        /// Test UpdateBotById
        /// </summary>
        [Test]
        public void UpdateBotByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //UpdateBotByIdData updateBotByIdData = null;
            //var response = instance.UpdateBotById(botUserid, apiToken, updateBotByIdData);
            //Assert.IsInstanceOf(typeof(InlineResponse20065Bots), response, "response is InlineResponse20065Bots");
        }
        
        /// <summary>
        /// Test ViewBotById
        /// </summary>
        [Test]
        public void ViewBotByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //var response = instance.ViewBotById(botUserid, apiToken);
            //Assert.IsInstanceOf(typeof(InlineResponse20065Bots), response, "response is InlineResponse20065Bots");
        }
        
    }

}
