/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = sendbird-platform-sdk.Client.OpenAPIDateConverter;

namespace sendbird-platform-sdk.Model
{
    /// <summary>
    /// LeaveMyGroupChannelsData
    /// </summary>
    [DataContract]
    public partial class LeaveMyGroupChannelsData :  IEquatable<LeaveMyGroupChannelsData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LeaveMyGroupChannelsData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LeaveMyGroupChannelsData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LeaveMyGroupChannelsData" /> class.
        /// </summary>
        /// <param name="userId">Specifies the unique ID of the user to leave all joined group channels. (required).</param>
        /// <param name="customType">Specifies the custom channel type to make the user leave joined group channels with the corresponding type. (required).</param>
        public LeaveMyGroupChannelsData(string userId = default(string), string customType = default(string))
        {
            // to ensure "userId" is required (not null)
            if (userId == null)
            {
                throw new InvalidDataException("userId is a required property for LeaveMyGroupChannelsData and cannot be null");
            }
            else
            {
                this.UserId = userId;
            }

            // to ensure "customType" is required (not null)
            if (customType == null)
            {
                throw new InvalidDataException("customType is a required property for LeaveMyGroupChannelsData and cannot be null");
            }
            else
            {
                this.CustomType = customType;
            }

        }

        /// <summary>
        /// Specifies the unique ID of the user to leave all joined group channels.
        /// </summary>
        /// <value>Specifies the unique ID of the user to leave all joined group channels.</value>
        [DataMember(Name="user_id", EmitDefaultValue=true)]
        public string UserId { get; set; }

        /// <summary>
        /// Specifies the custom channel type to make the user leave joined group channels with the corresponding type.
        /// </summary>
        /// <value>Specifies the custom channel type to make the user leave joined group channels with the corresponding type.</value>
        [DataMember(Name="custom_type", EmitDefaultValue=true)]
        public string CustomType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LeaveMyGroupChannelsData {\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  CustomType: ").Append(CustomType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LeaveMyGroupChannelsData);
        }

        /// <summary>
        /// Returns true if LeaveMyGroupChannelsData instances are equal
        /// </summary>
        /// <param name="input">Instance of LeaveMyGroupChannelsData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LeaveMyGroupChannelsData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.CustomType == input.CustomType ||
                    (this.CustomType != null &&
                    this.CustomType.Equals(input.CustomType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this.CustomType != null)
                    hashCode = hashCode * 59 + this.CustomType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
